# finance.py

def calculate_loan_amount(property_value: float, property_work: float, contribution: float) -> float:
    """
    This function calculates the total loan amount required based on the property value,
    the cost of works, and the down payment (contribution).
    """
    total_property_loan = property_value + property_work - contribution
    return total_property_loan


def calculate_profitability_percentage(monthly_rent: float, rental_vacancies: float, expenses: float, 
                                       property_value: float, property_work: float, contribution: float) -> float:
    """
    Calculate the profitability of a property based on rental income, vacancies, expenses, and property value.

    Args:
        monthly_rent (float): The monthly rent income generated by the property.
        rental_vacancies (float): The number of vacant month.
        expenses (float): The total expenses related to the property (maintenance, taxes, etc.).
        property_value (float): The property purchase price including agency and notary fees.
        property_work (float): The cost of any work or renovations to be carried out on the property.
        contribution (float): The owner's initial contribution.

    Returns:
        float: The profitability of the property as a percentage.
    """
    # Calculate the annual rent, accounting for vacancy
    annual_rent = monthly_rent * 12
    vacancy_amount = rental_vacancies * monthly_rent
    rent_after_vacancy = annual_rent - vacancy_amount

    # Calculate the net income after expenses
    net_income = rent_after_vacancy - expenses

    # Calculate the total invested amount
    total_investment = property_value + property_work - contribution

    # Calculate profitability
    profitability = (net_income / total_investment) * 100

    return profitability


def calculate_loan_cost(total_property_loan: float, bank_interest_rate: float, loan_duration_years: float, 
                        loan_insurance_cost: float, pno_insurance_cost: float) -> float:
    """
    Calculate the total cost of a property loan, including monthly payments, insurance costs, and interest over the loan duration.

    This function computes the monthly payment, the total cost of the loan over the specified duration,
    and the actual cost of the loan (i.e., the total paid amount minus the original loan amount). 
    The calculation includes both the principal repayment and the interest, as well as any insurance costs.

    Args:
        total_property_loan (float): The total amount of the loan taken for the property.
        bank_interest_rate (float): The annual interest rate for the loan, expressed as a percentage (e.g., 5 for 5%).
        loan_duration_years (float): The duration of the loan in years.
        loan_insurance_cost (float): The annual cost of the loan insurance (e.g., life insurance related to the loan).
        pno_insurance_cost (float): The annual cost of the property insurance (e.g., insurance for property-related damages or loss).

    Returns:
        tuple: A tuple containing three values:
            - `monthly_payment` (float): The total monthly payment, including insurance costs.
            - `total_loan_cost` (float): The total amount paid over the entire loan duration (principal + interest + insurance).
            - `loan_cost` (float): The actual cost of the loan (i.e., the difference between the total loan cost and the original loan amount).

    Note:
        - The function assumes that the bank interest rate is compounded monthly.
        - Insurance costs are added on top of the monthly loan payments.
        - The duration of the loan is in years, but the number of payments is converted to months for calculations.
        - The result gives the total cost of the loan over the entire period and the interest cost of the loan.
    """
    # Convert annual interest rate to monthly interest rate (decimal form)
    r = bank_interest_rate / 100 / 12

    # Total number of monthly payments (loan duration in months)
    n = loan_duration_years * 12

    # Calculate the monthly payment for loan insurances
    insurance_costs = loan_insurance_cost + pno_insurance_cost

    # Calculate the monthly payment for the loan principal and interest (without insurance)
    monthly_payment_without_insurance = total_property_loan * (r * (1 + r)**n) / ((1 + r)**n - 1)

    # Add the monthly insurance costs to the loan payment
    monthly_payment = monthly_payment_without_insurance + insurance_costs

    # Calculate the total cost of the loan over the entire period
    total_loan_cost = monthly_payment * n

    # Calculate the real cost of the loan (total paid minus the original loan amount)
    loan_cost = total_loan_cost - total_property_loan

    return monthly_payment, total_loan_cost, loan_cost


def calculate_cashflow_pretax(monthly_rent: float, monthly_payment: float, expenses: float) -> float:
    """
    Calculate the pre-tax cash flow of a property.

    The pre-tax cash flow is the difference between the monthly rental income, 
    the monthly loan payment (such as a mortgage payment), and the monthly expenses 
    related to the property. This calculation does not take taxes into account, 
    but provides an estimate of the gross cash flow generated by the property.

    Args:
        monthly_rent (float): The monthly rent income generated by the property.
        monthly_payment (float): The monthly payment for the property loan.
        expenses (float): The total annual expenses associated with the property (taxes, maintenance, etc.).

    Returns:
        float: The pre-tax cash flow (monthly amount).

    Example:
        >>> calculate_cashflow_pretax(1000, 600, 2400)
        50.0

    Note:
        - The expenses are provided as an annual amount (e.g., 2400 for 200 € of monthly expenses).
        - The function assumes monthly payments but divides the annual expenses by 12 to get a monthly figure.
    """
    # Calculate the pre-tax cash flow
    cashflow_pretax = monthly_rent - monthly_payment - (expenses / 12)

    return cashflow_pretax


def calculate_loan_and_expenses(monthly_payment: float, expenses: float) -> float:
    """
    Calculate the total monthly payment including loan payment and expenses.

    This function computes the total monthly payment required to cover both the loan payment 
    (or monthly debt payment) and the additional monthly expenses related to the property. 
    The expenses are provided as an annual amount, and the function divides the annual expenses by 12 
    to convert them into a monthly amount.

    Args:
        monthly_payment (float): The monthly loan payment (or monthly debt repayment).
        expenses (float): The total annual expenses related to the property (e.g., maintenance, taxes, insurance, etc.).

    Returns:
        float: The total monthly payment, which is the sum of the loan payment and the monthly portion of annual expenses.

    Example:
        >>> calculate_loan_and_expenses(1500, 2400)
        1700.0

    Note:
        - The expenses parameter is assumed to be provided as an annual amount (e.g., 2400 for 200 € of monthly expenses).
        - The function adds the monthly equivalent of annual expenses to the loan payment to get the total monthly payment.
    """
    # Calculate the total monthly payment including loan payment and expenses
    loan_and_expenses_payment = monthly_payment + (expenses / 12)

    return loan_and_expenses_payment